buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "com.avast.gradle:docker-compose-gradle-plugin:$dockerComposePluginVersion"
    }
}

plugins {
    id "io.spring.dependency-management"
}

apply plugin: VerifyMongoDBConfigurationPlugin
apply plugin: 'docker-compose'

dockerCompose.isRequiredBy(test)

dockerCompose {
    useComposeFiles = ['docker-compose-integration-tests.yml']
}

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")

    compile project(":order-history-common")

    compile "org.mongodb:mongo-java-driver"
    compile 'io.micronaut.configuration:micronaut-mongo-reactive'

    compile "io.eventuate.tram.core:eventuate-tram-producer-jdbc-micronaut:$eventuateTramVersion"
    compile "io.eventuate.tram.core:eventuate-tram-consumer-common-micronaut:$eventuateTramVersion"
    compile "io.eventuate.tram.core:eventuate-tram-messaging-micronaut:$eventuateTramVersion"
    compile "io.eventuate.tram.core:eventuate-tram-events-micronaut:$eventuateTramVersion"
    compile "io.eventuate.messaging.http:eventuate-tram-consumer-http-micronaut:$eventuateTramMessagingHttpVersion"

    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
}

// use JUnit 5 platform
test {
    useJUnitPlatform()
}